{"version":3,"sources":["App.module.css","with-auth.jsx","App.jsx","use-field.js","index.js"],"names":["module","exports","WrappedComponent","withAuth","useState","dictionary","setDictionary","initialValue","value","setValue","useCallback","nextValue","target","useField","data","handleDataChange","useDebounce","dataDebounced","useEffect","a","async","Set","default","Loader","active","words","trim","toLowerCase","replace","split","filter","word","index","self","indexOf","anagrams","plusograms","metagrams","logogrifs","brukvas","hybrids","sharadas","golovahvosts","forEach","word1","i","word2","j","length","sort","join","isAnagram","push","hasDifference","charAt","isMetagram","word1Sorted","word2Sorted","isPlusogram","isLogogrif","totalDifferences","isBrukva","hybrid","intersection","slice","toUpperCase","createHybrid","sharada","has","createSharada","word1Tail","createGolovahvosts","Container","Grid","padded","Row","Column","Form","TextArea","autoFocus","placeholder","onChange","Divider","horizontal","Header","as","className","styles","title","map","anagram","Label","key","classNames","odd","plusogram","metagram","logogrif","brukva","golovahvost","useMemo","window","location","hostname","URLSearchParams","search","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c59ffd46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__-GfWs\",\"words\":\"App_words__1Oqw2\",\"word\":\"App_word__3aQvw\",\"odd\":\"App_odd__2GTiD\"};","import React, { useMemo } from 'react';\n\nconst HOSTNAME = 'meltyshev.github.io';\nconst TOKEN = 'dzffM7';\n\nexport default WrappedComponent => {\n  const Auth = () => {\n    const isAuthenticated = useMemo(() => {\n      if (process.env.NODE_ENV === 'development') {\n        return true;\n      }\n\n      return window.location.hostname === HOSTNAME\n        && new URLSearchParams(window.location.search).get('token') === TOKEN;\n    }, []);\n\n    if (!isAuthenticated) {\n      return 'Unauthorized';\n    }\n\n    return <WrappedComponent />;\n  };\n\n  return Auth;\n};\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useDebounce } from 'use-debounce';\nimport {\n  Container, Divider, Form, Grid, Header, Label, Loader, TextArea\n} from 'semantic-ui-react';\n\nimport withAuth from './with-auth';\nimport useField from './use-field';\n\nimport styles from './App.module.css';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nconst isAnagram = (word1, word2) => {\n  if (word1.length !== word2.length) {\n    return false;\n  }\n\n  const word1Sorted = word1.split('').sort().join('');\n  const word2Sorted = word2.split('').sort().join('');\n\n  return word1Sorted === word2Sorted;\n}\n\nconst isMetagram = (word1, word2) => {\n  if (word1.length !== word2.length) {\n    return false;\n  }\n\n  let hasDifference = false;\n  for (let i = 0; i < word1.length; i++) {\n    if (word1.charAt(i) !== word2.charAt(i)) {\n      if (hasDifference) {\n        return false;\n      }\n\n      hasDifference = true;\n    }\n  }\n\n  return hasDifference;\n}\n\nconst isPlusogram = (word1, word2) => {\n  if (word2.length - word1.length !== 1) {\n    return false;\n  }\n\n  const word1Sorted = word1.split('').sort().join('');\n  const word2Sorted = word2.split('').sort().join('');\n\n  let hasDifference = false;\n  for (let i = 0; i < word2Sorted.length; i++) {\n    if (word1Sorted.charAt(i - +hasDifference) !== word2Sorted.charAt(i)) {\n      if (hasDifference) {\n        return false;\n      }\n\n      hasDifference = true;\n    }\n  }\n\n  return hasDifference;\n}\n\nconst isLogogrif = (word1, word2) => {\n  if (word2.length - word1.length !== 1) {\n    return false;\n  }\n\n  let hasDifference = false;\n  for (let i = 0; i < word2.length; i++) {\n    if (word1.charAt(i - +hasDifference) !== word2.charAt(i)) {\n      if (hasDifference) {\n        return false;\n      }\n\n      hasDifference = true;\n    }\n  }\n\n  return hasDifference;\n}\n\nconst isBrukva = (word1, word2) => {\n  if (word2.length - word1.length !== 1) {\n    return false;\n  }\n\n  let totalDifferences = 0;\n  for (let i = 0; i < word2.length; i++) {\n    if (word1.charAt(i - +!!totalDifferences) === word2.charAt(i)) {\n      if (totalDifferences === 1) {\n        return false;\n      }\n    } else {\n      if (totalDifferences === 2) {\n        return false;\n      }\n\n      totalDifferences++;\n    }\n  }\n\n  return totalDifferences === 2;\n}\n\nconst createHybrid = (word1, word2) => {\n  const intersection = word1.slice(-3);\n  if (word2.slice(0, 3) === intersection) {\n    return word1.slice(0, -3) + intersection.toUpperCase() + word2.slice(3);\n  }\n\n  return null;\n}\n\nconst createSharada = (word1, word2, dictionary) => {\n  const word = word1 + word2;\n  if (dictionary.has(word)) {\n    return word;\n  }\n\n  return null;\n}\n\nconst createGolovahvosts = (word1, word2, dictionary) => {\n  if (word1.length < 2 || word2.length < 2) {\n    return [];\n  }\n\n  const golovahvosts = [];\n  for (let i = 1; i < word1.length; i++) {\n    const word1Tail = word1.slice(i);\n\n    for (let j = 1; j < word2.length; j++) {\n      const word = word1Tail + word2.slice(0, -j);\n      if (dictionary.has(word)) {\n        golovahvosts.push(word1.slice(0, i) + word.toUpperCase() + word2.slice(-j));\n      }\n    }\n  }\n\n  return golovahvosts;\n};\n\nconst App = () => {\n  const [dictionary, setDictionary] = useState(null);\n  const [data, handleDataChange] = useField('');\n  const [dataDebounced] = useDebounce(data, 500);\n\n  useEffect(() => {\n    (async () => {\n      setDictionary(new Set((await import('./dictionary.json')).default));\n    })();\n  }, []);\n\n  if (!dictionary) {\n    return <Loader active>Загружаю базу...</Loader>;\n  }\n\n  const words = dataDebounced\n    .trim()\n    .toLowerCase()\n    .replace('ё', 'е')\n    .split(/\\s+/)\n    .filter((word, index, self) => {\n      return index === self.indexOf(word);\n    });\n\n  const anagrams = [];\n  const plusograms = [];\n  const metagrams = [];\n  const logogrifs = [];\n  const brukvas = [];\n  const hybrids = [];\n  const sharadas = [];\n  const golovahvosts = [];\n\n  words.forEach((word1, i) => {\n    words.forEach((word2, j) => {\n      if (j === i) {\n        return;\n      }\n\n      if (j > i) {\n        if (isAnagram(word1, word2)) {\n          anagrams.push(`${word1} ${word2}`);\n        }\n\n        if (isMetagram(word1, word2)) {\n          metagrams.push(`${word1} ${word2}`);\n        }\n      }\n\n      if (isPlusogram(word1, word2)) {\n        plusograms.push(`${word1} ${word2}`);\n      }\n\n      if (isLogogrif(word1, word2)) {\n        logogrifs.push(`${word1} ${word2}`);\n      }\n\n      if (isBrukva(word1, word2)) {\n        brukvas.push(`${word1} ${word2}`);\n      }\n\n      const hybrid = createHybrid(word1, word2);\n      if (hybrid) {\n        hybrids.push(hybrid);\n      }\n\n      const sharada = createSharada(word1, word2, dictionary);\n      if (sharada) {\n        sharadas.push(sharada);\n      }\n\n      golovahvosts.push(...createGolovahvosts(word1, word2, dictionary));\n    });\n  });\n\n  return (\n    <Container>\n      <Grid padded>\n        <Grid.Row>\n          <Grid.Column>\n            <Form>\n              <TextArea\n                autoFocus\n                value={data}\n                placeholder=\"Данные\"\n                onChange={handleDataChange}\n              />\n            </Form>\n          </Grid.Column>\n        </Grid.Row>\n        {anagrams.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Анаграммы</Header>\n              </Divider>\n              <div className={styles.words}>\n                {anagrams.map((anagram, i) => (\n                  <Label\n                    horizontal\n                    key={anagram}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {anagram}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n        {plusograms.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Плюсограммы</Header>\n              </Divider>\n              <div className={styles.words}>\n                {plusograms.map((plusogram, i) => (\n                  <Label\n                    horizontal\n                    key={plusogram}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {plusogram}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n        {metagrams.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Метаграммы</Header>\n              </Divider>\n              <div className={styles.words}>\n                {metagrams.map((metagram, i) => (\n                  <Label\n                    horizontal\n                    key={metagram}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {metagram}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n        {logogrifs.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Логогрифы</Header>\n              </Divider>\n              <div className={styles.words}>\n                {logogrifs.map((logogrif, i) => (\n                  <Label\n                    horizontal\n                    key={logogrif}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {logogrif}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n        {brukvas.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Брюквы</Header>\n              </Divider>\n              <div className={styles.words}>\n                {brukvas.map((brukva, i) => (\n                  <Label\n                    horizontal\n                    key={brukva}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {brukva}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n        {hybrids.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Гибриды</Header>\n              </Divider>\n              <div className={styles.words}>\n                {hybrids.map((hybrid, i) => (\n                  <Label\n                    horizontal\n                    key={hybrid}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {hybrid}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n        {sharadas.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Шарады</Header>\n              </Divider>\n              <div className={styles.words}>\n                {sharadas.map((sharada, i) => (\n                  <Label\n                    horizontal\n                    key={sharada}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {sharada}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n        {golovahvosts.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Головахвосты</Header>\n              </Divider>\n              <div className={styles.words}>\n                {golovahvosts.map((golovahvost, i) => (\n                  <Label\n                    horizontal\n                    key={golovahvost}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {golovahvost}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default withAuth(App);\n","import { useCallback, useState } from 'react';\n\nexport default (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = useCallback(({ target: { value: nextValue } }) => {\n    setValue(nextValue);\n  }, []);\n\n  return [value, handleChange, setValue];\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}