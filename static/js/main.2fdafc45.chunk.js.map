{"version":3,"sources":["serviceWorkerRegistration.js","with-auth.jsx","index.js","App.jsx","use-field.js","App.module.css"],"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","message","WrappedComponent","registerMethod","DATABASE","array","database","set","Set","FORMATS_MAP","withAuth","useState","selectedFormatsSet","setSelectedFormatsSet","initialValue","value","setValue","useCallback","_","nextValue","useField","wordGroups","handleWordGroupsChange","useDebounce","wordGroupsDebounced","wordGroupsClean","useMemo","split","flatMap","wordGroup","trim","replaceAll","word","test","toLowerCase","formats","dictionarySet","reduce","result","format","has","forEach","wordGroup1","i","wordGroup2","j","word1","word2","zerkala","includes","length","reverse","join","isZerkalo","push","anagrams","sort","isAnagram","metagrams","hasDifference","charAt","isMetagram","metanagrams","replace","isMetanagram","plusograms","word1Sorted","word2Sorted","isPlusogram","tlenograms","isTlenogram","logogrifs","isLogogrif","logogrifs2","totalDifferences","isLogogrif2","logogrifs3","isLogogrif3","metagrifs","isMetagrif","brukvas","isBrukva","tikvas","isTikva","hybrids2","hybrid2","intersection","slice","toUpperCase","createHybrid2","hybrids3","hybrid3","createHybrid3","hybrids4","hybrid4","createHybrid4","sharadas","sharada","createSharada","golovahvosts","word1Tail","createGolovahvosts","golovahvost","getFormats","handleSelectedFormatChange","filter","className","styles","header","Container","Grid","padded","stackable","Row","Column","width","Form","TextArea","autoFocus","placeholder","onChange","Modal","size","trigger","Button","icon","Header","content","Content","Group","grouped","map","formatLabel","Checkbox","key","label","checked","Divider","horizontal","as","title","words","Label","classNames","odd","localStorage","getItem","URLSearchParams","search","registerString","registerStringPrev","setItem","ReactDOM","render","document","getElementById","serviceWorkerRegistration","module","exports"],"mappings":"+/4sVAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAG5B,SAASC,EAASC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,cAAwBR,OAAOC,SAASQ,MACpDC,SAAWV,OAAOC,SAASS,OAIvC,OAGFV,OAAOW,iBAAiB,QAAQ,WAC9B,IAAMC,EAAK,UAAMJ,cAAN,sBAEPV,IAgEV,SAAiCc,EAAOP,GAEtCQ,MAAMD,EAAO,CACXE,QAAS,CAAE,iBAAkB,YAE5BC,MAAK,SAACC,GAEL,IAAMC,EAAcD,EAASF,QAAQI,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5Cd,UAAUe,cAAcC,MAAMP,MAAK,SAACQ,GAClCA,EAAaC,aAAaT,MAAK,WAC7Bf,OAAOC,SAASwB,eAKpBC,EAAgBd,EAAOP,MAG1BsB,OAAM,WACLC,QAAQC,IAAI,oEAtFVC,CAAwBlB,EAAOP,GAI/BC,UAAUe,cAAcC,MAAMP,MAAK,WACjCa,QAAQC,IACN,+GAMJH,EAAgBd,EAAOP,OAM/B,SAASqB,EAAgBd,EAAOP,GAC9BC,UAAUe,cACPjB,SAASQ,GACTG,MAAK,SAACQ,GACLA,EAAaQ,cAAgB,WAC3B,IAAMC,EAAmBT,EAAaU,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf7B,UAAUe,cAAce,YAI1BR,QAAQC,IACN,+GAKExB,GAAUA,EAAOgC,UACnBhC,EAAOgC,SAASd,KAMlBK,QAAQC,IAAI,sCAGRxB,GAAUA,EAAOiC,WACnBjC,EAAOiC,UAAUf,WAO5BI,OAAM,SAACY,GACNX,QAAQW,MAAM,4CAA6CA,MAgC1D,SAASf,IACV,kBAAmBlB,WACrBA,UAAUe,cAAcC,MACrBP,MAAK,SAACQ,GACLA,EAAaC,gBAEdG,OAAM,SAACY,GACNX,QAAQW,MAAMA,EAAMC,Y,IChIZC,ECIZC,E,qKCeEC,G,OAAW,CACfC,MAAOC,EACPC,IAAK,IAAIC,IAAIF,KAGTG,EAAc,CAClB,CAAC,WAAY,0DACb,CAAC,UAAW,wCACZ,CAAC,WAAY,kDACb,CAAC,WAAY,kDACb,CAAC,WAAY,kDACb,CAAC,eAAgB,4EACjB,CAAC,UAAW,8CACZ,CAAC,YAAa,0DACd,CAAC,aAAc,6DACf,CAAC,aAAc,6DACf,CAAC,YAAa,gEACd,CAAC,YAAa,0DACd,CAAC,cAAe,4EAChB,CAAC,aAAc,sEACf,CAAC,aAAc,sEACf,CAAC,SAAU,kCACX,CAAC,WAAY,yCAgkBAC,GFzmBCR,EE+eJ,WAAO,IAAD,EACoCS,mBAAS,IAAIH,KADjD,mBACTI,EADS,KACWC,EADX,OClfH,SAACC,GAAkB,IAAD,EACLH,mBAASG,GADJ,mBACxBC,EADwB,KACjBC,EADiB,KAO/B,MAAO,CAACD,EAJaE,uBAAY,SAACC,EAAD,GAA8B,IAAjBC,EAAgB,EAAvBJ,MACrCC,EAASG,KACR,IAE0BH,GD8egBI,CAAS,IAHtC,mBAGTC,EAHS,KAGGC,EAHH,OAIcC,YAAYF,EAAY,KAA/CG,EAJS,oBAMVC,EAAkBC,mBACtB,kBACEF,EAAoBG,MAAM,WAAWC,SAAQ,SAACC,GAG5C,OAFAA,EAAYA,EAAUC,QAQf,CAFOD,EAAUE,WAAW,IAAK,KAAKA,WAAW,KAAM,KAAKJ,MAAM,OAGjEC,SAAQ,SAACI,GACb,MAAK,kqOAAYC,KAAKD,GAIf,CAACA,EAAKE,cAAcH,WAAW,SAAK,WAHlC,OARJ,QAeb,CAACP,IAGGW,EAAUT,mBAAQ,WACtB,OAvLe,SAACL,EAAYe,EAAexB,GAC7C,IAAMuB,EAAU1B,EAAY4B,QAAO,SAACC,EAAD,GAAuB,IAAbC,EAAY,oBACvD,OAAI3B,EAAmB4B,IAAID,GAClB,eACFD,EADL,eAEGC,EAAS,KAIPD,IACN,IA2IH,OAzIAjB,EAAWoB,SAAQ,SAACC,EAAYC,GAC9BtB,EAAWoB,SAAQ,SAACG,EAAYC,GAC1BA,IAAMF,GAIVD,EAAWD,SAAQ,SAACK,GAClBF,EAAWH,SAAQ,SAACM,GAClB,GAAIA,IAAUD,EAAd,CAIA,IAAMR,EAAM,UAAMQ,EAAN,YAAeC,GAoF3B,GAlFIF,EAAIF,IACFR,EAAQa,UAAYb,EAAQa,QAAQC,SAASX,IAtU3C,SAACQ,EAAOC,GACxB,OAAID,EAAMI,SAAWH,EAAMG,QAIpBJ,IAAUC,EAAMpB,MAAM,IAAIwB,UAAUC,KAAK,IAiUsBC,CAAUP,EAAOC,IAC3EZ,EAAQa,QAAQM,KAAKhB,GAGnBH,EAAQoB,WAAapB,EAAQoB,SAASN,SAASX,IAlU7C,SAACQ,EAAOC,GACxB,OAAID,EAAMI,SAAWH,EAAMG,QAIPJ,EAAMnB,MAAM,IAAI6B,OAAOJ,KAAK,MAC5BL,EAAMpB,MAAM,IAAI6B,OAAOJ,KAAK,IA4TwBK,CAAUX,EAAOC,IAC7EZ,EAAQoB,SAASD,KAAKhB,GAItBH,EAAQuB,YACPvB,EAAQuB,UAAUT,SAASX,IAvSvB,SAACQ,EAAOC,GACzB,GAAqB,IAAjBD,EAAMI,QAAgBJ,EAAMI,SAAWH,EAAMG,OAC/C,OAAO,EAIT,IADA,IAAIS,GAAgB,EACXhB,EAAI,EAAGA,EAAIG,EAAMI,OAAQP,IAChC,GAAIG,EAAMc,OAAOjB,KAAOI,EAAMa,OAAOjB,GAAI,CACvC,GAAIgB,EACF,OAAO,EAGTA,GAAgB,EAIpB,OAAOA,EAwRKE,CAAWf,EAAOC,IAElBZ,EAAQuB,UAAUJ,KAAKhB,GAIvBH,EAAQ2B,cACP3B,EAAQ2B,YAAYb,SAASX,IA5RvB,SAACQ,EAAOC,GAC3B,GAAqB,IAAjBD,EAAMI,QAAgBJ,EAAMI,SAAWH,EAAMG,OAC/C,OAAO,EAGT,IAAK,IAAIP,EAAI,EAAGA,EAAIG,EAAMI,OAAQP,IAChCI,EAAQA,EAAMgB,QAAQjB,EAAMc,OAAOjB,GAAI,IAGzC,OAAwB,IAAjBI,EAAMG,OAoRDc,CAAalB,EAAOC,IAEpBZ,EAAQ2B,YAAYR,KAAKhB,IAK3BH,EAAQ8B,aACP9B,EAAQ8B,WAAWhB,SAASX,IA9UrB,SAACQ,EAAOC,GAC1B,GAAqB,IAAjBD,EAAMI,QAAgBH,EAAMG,OAASJ,EAAMI,SAAW,EACxD,OAAO,EAOT,IAJA,IAAMgB,EAAcpB,EAAMnB,MAAM,IAAI6B,OAAOJ,KAAK,IAC1Ce,EAAcpB,EAAMpB,MAAM,IAAI6B,OAAOJ,KAAK,IAE5CO,GAAgB,EACXhB,EAAI,EAAGA,EAAIwB,EAAYjB,OAAQP,IACtC,GAAIuB,EAAYN,OAAOjB,GAAKgB,KAAmBQ,EAAYP,OAAOjB,GAAI,CACpE,GAAIgB,EACF,OAAO,EAGTA,GAAgB,EAIpB,OAAOA,EA4TGS,CAAYtB,EAAOC,IAEnBZ,EAAQ8B,WAAWX,KAAKhB,GAIxBH,EAAQkC,aACPlC,EAAQkC,WAAWpB,SAASX,IAjSrB,SAACQ,EAAOC,GAC1B,GAAqB,IAAjBD,EAAMI,QAAgBH,EAAMG,OAASJ,EAAMI,SAAW,EACxD,OAAO,EAGT,IAAK,IAAIP,EAAI,EAAGA,EAAIG,EAAMI,OAAQP,IAChCI,EAAQA,EAAMgB,QAAQjB,EAAMc,OAAOjB,GAAI,IAGzC,OAAwB,IAAjBI,EAAMG,OAyRHoB,CAAYxB,EAAOC,IAEnBZ,EAAQkC,WAAWf,KAAKhB,GAIxBH,EAAQoC,YACPpC,EAAQoC,UAAUtB,SAASX,IA7RrB,SAACQ,EAAOC,GACzB,GAAqB,IAAjBD,EAAMI,QAAgBH,EAAMG,OAASJ,EAAMI,SAAW,EACxD,OAAO,EAIT,IADA,IAAIS,GAAgB,EACXhB,EAAI,EAAGA,EAAII,EAAMG,OAAQP,IAChC,GAAIG,EAAMc,OAAOjB,GAAKgB,KAAmBZ,EAAMa,OAAOjB,GAAI,CACxD,GAAIgB,EACF,OAAO,EAGTA,GAAgB,EAIpB,OAAOA,EA8QGa,CAAW1B,EAAOC,IAElBZ,EAAQoC,UAAUjB,KAAKhB,GAIvBH,EAAQsC,aACPtC,EAAQsC,WAAWxB,SAASX,IAlRrB,SAACQ,EAAOC,GAC1B,GAAqB,IAAjBD,EAAMI,QAAgBH,EAAMG,OAASJ,EAAMI,SAAW,EACxD,OAAO,EAIT,IADA,IAAIwB,EAAmB,EACd/B,EAAI,EAAGA,EAAII,EAAMG,OAAQP,IAChC,GAAIG,EAAMc,OAAOjB,EAAI+B,KAAsB3B,EAAMa,OAAOjB,IACtD,GAAyB,IAArB+B,EACF,OAAO,MAEJ,CACL,GAAyB,IAArBA,EACF,OAAO,EAGTA,IAIJ,OAA4B,IAArBA,EA+PGC,CAAY7B,EAAOC,IAEnBZ,EAAQsC,WAAWnB,KAAKhB,GAIxBH,EAAQyC,aACPzC,EAAQyC,WAAW3B,SAASX,IAnQrB,SAACQ,EAAOC,GAC1B,GAAqB,IAAjBD,EAAMI,QAAgBH,EAAMG,OAASJ,EAAMI,SAAW,EACxD,OAAO,EAIT,IADA,IAAIwB,EAAmB,EACd/B,EAAI,EAAGA,EAAII,EAAMG,OAAQP,IAChC,GAAIG,EAAMc,OAAOjB,EAAI+B,KAAsB3B,EAAMa,OAAOjB,IACtD,GAAyB,IAArB+B,GAA+C,IAArBA,EAC5B,OAAO,MAEJ,CACL,GAAyB,IAArBA,EACF,OAAO,EAGTA,IAIJ,OAA4B,IAArBA,EAgPGG,CAAY/B,EAAOC,IAEnBZ,EAAQyC,WAAWtB,KAAKhB,GAIxBH,EAAQ2C,YACP3C,EAAQ2C,UAAU7B,SAASX,IApPrB,SAACQ,EAAOC,GACzB,GAAqB,IAAjBD,EAAMI,QAAgBH,EAAMG,OAASJ,EAAMI,SAAW,EACxD,OAAO,EAIT,IADA,IAAIwB,EAAmB,EACd/B,EAAI,EAAGA,EAAII,EAAMG,UACpBJ,EAAMc,OAAOjB,KAAO+B,KAAsB3B,EAAMa,OAAOjB,MACzD+B,EAEuB,GAJO/B,KAUlC,GAAyB,IAArB+B,EACF,OAAO,EAGTA,EAAmB,EACnB,IAAK,IAAI/B,EAAI,EAAGA,EAAII,EAAMG,OAAQP,IAChC,GAAIG,EAAMc,OAAOjB,IAA2B,IAArB+B,MAA6B3B,EAAMa,OAAOjB,GAAI,CACnE,GAAyB,IAArB+B,EACF,OAAO,EAGTA,IAIJ,OAA4B,IAArBA,EAsNGK,CAAWjC,EAAOC,IAElBZ,EAAQ2C,UAAUxB,KAAKhB,GAGrBH,EAAQ6C,UAAY7C,EAAQ6C,QAAQ/B,SAASX,IAxN1C,SAACQ,EAAOC,GACvB,GAAqB,IAAjBD,EAAMI,QAAgBH,EAAMG,OAASJ,EAAMI,SAAW,EACxD,OAAO,EAIT,IADA,IAAIwB,EAAmB,EACd/B,EAAI,EAAGA,EAAII,EAAMG,OAAQP,IAChC,GAAIG,EAAMc,OAAOjB,KAAO+B,KAAsB3B,EAAMa,OAAOjB,IACzD,GAAyB,IAArB+B,EACF,OAAO,MAEJ,CACL,GAAyB,IAArBA,EACF,OAAO,EAGTA,IAIJ,OAA4B,IAArBA,EAoM6DO,CAASnC,EAAOC,IAC1EZ,EAAQ6C,QAAQ1B,KAAKhB,GAGnBH,EAAQ+C,SAAW/C,EAAQ+C,OAAOjC,SAASX,IArMzC,SAACQ,EAAOC,GACtB,GAAID,EAAMI,QAAU,GAAKH,EAAMG,OAASJ,EAAMI,SAAW,EACvD,OAAO,EAIT,IADA,IAAIwB,EAAmB,EACd/B,EAAI,EAAGA,EAAII,EAAMG,OAAQP,IAChC,GAAIG,EAAMc,OAAOjB,KAAO+B,KAAsB3B,EAAMa,OAAOjB,IACzD,GAAyB,IAArB+B,GAA+C,IAArBA,EAC5B,OAAO,MAEJ,CACL,GAAyB,IAArBA,EACF,OAAO,EAGTA,IAIJ,OAA4B,IAArBA,EAiL2DS,CAAQrC,EAAOC,IACvEZ,EAAQ+C,OAAO5B,KAAKhB,GAGlBH,EAAQiD,SAAU,CACpB,IAAMC,EAnLI,SAACvC,EAAOC,GAC5B,GAAID,EAAMI,QAAU,GAAKH,EAAMG,QAAU,EACvC,OAAO,KAGT,IAAMoC,EAAexC,EAAMyC,OAAO,GAClC,OAAIxC,EAAMwC,MAAM,EAAG,KAAOD,EACjBxC,EAAMyC,MAAM,GAAI,GAAKD,EAAaE,cAAgBzC,EAAMwC,MAAM,GAGhE,KAyKmBE,CAAc3C,EAAOC,GACjCsC,IAAYlD,EAAQiD,SAASnC,SAASoC,IACxClD,EAAQiD,SAAS9B,KAAK+B,GAI1B,GAAIlD,EAAQuD,SAAU,CACpB,IAAMC,EA7KI,SAAC7C,EAAOC,GAC5B,GAAID,EAAMI,QAAU,GAAKH,EAAMG,QAAU,EACvC,OAAO,KAGT,IAAMoC,EAAexC,EAAMyC,OAAO,GAClC,OAAIxC,EAAMwC,MAAM,EAAG,KAAOD,EACjBxC,EAAMyC,MAAM,GAAI,GAAKD,EAAaE,cAAgBzC,EAAMwC,MAAM,GAGhE,KAmKmBK,CAAc9C,EAAOC,GACjC4C,IAAYxD,EAAQuD,SAASzC,SAAS0C,IACxCxD,EAAQuD,SAASpC,KAAKqC,GAI1B,GAAIxD,EAAQ0D,SAAU,CACpB,IAAMC,EAvKI,SAAChD,EAAOC,GAC5B,GAAID,EAAMI,QAAU,GAAKH,EAAMG,QAAU,EACvC,OAAO,KAGT,IAAMoC,EAAexC,EAAMyC,OAAO,GAClC,OAAIxC,EAAMwC,MAAM,EAAG,KAAOD,EACjBxC,EAAMyC,MAAM,GAAI,GAAKD,EAAaE,cAAgBzC,EAAMwC,MAAM,GAGhE,KA6JmBQ,CAAcjD,EAAOC,GACjC+C,IAAY3D,EAAQ0D,SAAS5C,SAAS6C,IACxC3D,EAAQ0D,SAASvC,KAAKwC,GAI1B,GAAI3D,EAAQ6D,SAAU,CACpB,IAAMC,EAjKI,SAACnD,EAAOC,EAAOX,GACnC,IAAMJ,EAAOc,EAAQC,EACrB,OAAIX,EAAcI,IAAIR,GACbA,EAGF,KA2JmBkE,CAAcpD,EAAOC,EAAOX,GACxC6D,IAAY9D,EAAQ6D,SAAS/C,SAASgD,IACxC9D,EAAQ6D,SAAS1C,KAAK2C,GAItB9D,EAAQgE,cA9JK,SAACrD,EAAOC,EAAOX,GACxC,GAAIU,EAAMI,QAAU,GAAKH,EAAMG,QAAU,EACvC,MAAO,GAIT,IADA,IAAMiD,EAAe,GACZxD,EAAIG,EAAMI,OAAS,EAAGP,GAAK,EAAGA,IAGrC,IAFA,IAAMyD,EAAYtD,EAAMyC,OAAO5C,GAEtBE,EAAIE,EAAMG,OAAS,EAAGL,GAAK,EAAGA,IAAK,CAC1C,IAAMb,EAAOoE,EAAYrD,EAAMwC,MAAM,EAAG1C,GACpCT,EAAcI,IAAIR,IACpBmE,EAAa7C,KACXR,EAAMyC,MAAM,EAAGzC,EAAMI,OAASP,GAAKX,EAAKwD,cAAgBzC,EAAMwC,MAAM1C,EAAIE,EAAMG,SAMtF,OAAOiD,EA4IwBE,CAAmBvD,EAAOC,EAAOX,GACzCK,SAAQ,SAAC6D,GACfnE,EAAQgE,aAAalD,SAASqD,IACjCnE,EAAQgE,aAAa7C,KAAKgD,mBASjCnE,EAkCEoE,CAAW9E,EAAiBrB,EAASG,IAAKK,KAChD,CAACA,EAAoBa,IAElB+E,EAA6BvF,uBACjC,SAACC,EAAD,GAAmB,IAAbH,EAAY,EAAZA,MACAH,EAAmB4B,IAAIzB,GACzBF,EACE,IAAIL,IAAI,YAAII,GAAoB6F,QAAO,SAAClE,GAAD,OAAYA,IAAWxB,OAGhEF,EAAsB,IAAIL,IAAJ,sBAAYI,GAAZ,CAAgCG,QAG1D,CAACH,IAGH,OACE,oCACE,yBAAK8F,UAAWC,IAAOC,QACrB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,QAAM,EAACC,WAAS,GACpB,kBAACF,EAAA,EAAKG,IAAN,KACE,kBAACH,EAAA,EAAKI,OAAN,CAAaC,MAAO,IAClB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTvG,MAAOM,EACPkG,YAAY,gEACZC,SAAUlG,MAIhB,kBAACwF,EAAA,EAAKI,OAAN,KACE,kBAACO,EAAA,EAAD,CAAOC,KAAK,OAAOC,QAAS,kBAACC,EAAA,EAAD,CAAQF,KAAK,MAAMG,KAAK,aAClD,kBAACC,EAAA,EAAD,CAAQD,KAAK,UAAUE,QAAQ,2DAC/B,kBAACN,EAAA,EAAMO,QAAP,KACE,kBAACZ,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKa,MAAN,CAAYC,SAAO,GACjB,6EACCzH,EAAY0H,KAAI,mCAAE5F,EAAF,KAAU6F,EAAV,YACf,kBAAChB,EAAA,EAAKiB,SAAN,CACEC,IAAK/F,EACLxB,MAAOwB,EACPgG,MAAOH,EACPI,QAAS5H,EAAmB4B,IAAID,GAChCiF,SAAUhB,gBAYhC,yBAAKE,UAAWC,IAAOoB,SACrB,kBAAClB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,QAAM,GACTtG,EAAYgG,QAAO,gBAAElE,EAAF,2BAAcJ,EAAQI,IAAWJ,EAAQI,GAAQW,OAAS,KAAGiF,KAC/E,mCAAE5F,EAAF,KAAU6F,EAAV,YACE,kBAACtB,EAAA,EAAKG,IAAN,CAAUqB,IAAK/F,GACb,kBAACuE,EAAA,EAAKI,OAAN,KACE,kBAACuB,EAAA,EAAD,CAASC,YAAU,GACjB,kBAACZ,EAAA,EAAD,CAAQa,GAAG,KAAKjC,UAAWC,IAAOiC,OAC/BR,IAGL,yBAAK1B,UAAWC,IAAOkC,OACpB1G,EAAQI,GAAQ4F,KAAI,SAACnG,EAAMW,GAAP,OACnB,kBAACmG,EAAA,EAAD,CACEJ,YAAU,EACVJ,IAAKtG,EACL0E,UAAWqC,IAAWpC,IAAO3E,KAAMW,EAAI,GAAKgE,IAAOqC,MAElDhH,iBFzlBZ,WAgBX,OAfwBN,mBAAQ,WAK9B,MAA2C,SAAvCuH,aAAaC,QAAQ,eAVd,wBAeTzL,OAAOC,SAASC,UAdV,WAeN,IAAIwL,gBAAgB1L,OAAOC,SAAS0L,QAAQzK,IAAI,WAEjD,IAMI,kBAACuB,EAAD,MAHE,mCCjBPmJ,EAAiB,IAAIF,gBAAgB1L,OAAOC,SAAS0L,QAAQzK,IAAI,YACjE2K,EAAqBL,aAAaC,QAAQ,cAGhD,GAAI,CAAC,OAAQ,SAASjG,SAASoG,GAAiB,CAC5C,IAAMxL,EAA8B,SAAnBwL,EACjBlJ,EAAiBtC,EAAW,WAAa,aAErCwL,IAAmBC,GACnBL,aAAaM,QAAQ,aAAc1L,QAGvCsC,EAAwC,SAAvBmJ,EAAgC,WAAa,aAGlEE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SAEjDC,EAA0BzJ,M,mBGtB1B0J,EAAOC,QAAU,CAAC,OAAS,oBAAoB,QAAU,qBAAqB,MAAQ,mBAAmB,MAAQ,mBAAmB,KAAO,kBAAkB,IAAM,oB","file":"static/js/main.2fdafc45.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useMemo } from 'react';\n\nconst HOSTNAME = 'meltyshev.github.io';\nconst TOKEN = 'rwJ4aZ';\n\nexport default (WrappedComponent) => {\n  const Auth = () => {\n    const isAuthenticated = useMemo(() => {\n      if (process.env.NODE_ENV === 'development') {\n        return true;\n      }\n\n      if (localStorage.getItem('registered') === 'true') {\n        return true;\n      }\n\n      return (\n        window.location.hostname === HOSTNAME &&\n        new URLSearchParams(window.location.search).get('token') === TOKEN\n      );\n    }, []);\n\n    if (!isAuthenticated) {\n      return '💁‍♂️';\n    }\n\n    return <WrappedComponent />;\n  };\n\n  return Auth;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport App from './App';\n\nconst registerString = new URLSearchParams(window.location.search).get('register');\nconst registerStringPrev = localStorage.getItem('registered');\n\nlet registerMethod;\nif (['true', 'false'].includes(registerString)) {\n    const register = registerString === 'true';\n    registerMethod = register ? 'register' : 'unregister';\n\n    if (registerString !== registerStringPrev) {\n        localStorage.setItem('registered', register);\n    }\n} else {\n    registerMethod = registerStringPrev === 'true' ? 'register' : 'unregister';\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorkerRegistration[registerMethod]();\n","import React, { useCallback, useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport { useDebounce } from 'use-debounce';\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Grid,\n  Header,\n  Label,\n  Modal,\n  TextArea,\n} from 'semantic-ui-react';\n\nimport withAuth from './with-auth';\nimport useField from './use-field';\n\nimport database from './database.json';\n\nimport styles from './App.module.css';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nconst DATABASE = {\n  array: database,\n  set: new Set(database),\n};\n\nconst FORMATS_MAP = [\n  ['anagrams', 'Анаграммы'],\n  ['brukvas', 'Брюквы'],\n  ['hybrids2', 'Гибриды (2)'],\n  ['hybrids3', 'Гибриды (3)'],\n  ['hybrids4', 'Гибриды (4)'],\n  ['golovahvosts', 'Головахвосты'],\n  ['zerkala', 'Зеркала'],\n  ['logogrifs', 'Логогрифы'],\n  ['logogrifs2', 'Логогрифы +2'],\n  ['logogrifs3', 'Логогрифы +3'],\n  ['metagrams', 'Метаграммы'],\n  ['metagrifs', 'Метагрифы'],\n  ['metanagrams', 'Метанаграммы'],\n  ['plusograms', 'Плюсограммы'],\n  ['tlenograms', 'Тленограммы'],\n  ['tikvas', 'Тыквы'],\n  ['sharadas', 'Шарады'],\n];\n\nconst isZerkalo = (word1, word2) => {\n  if (word1.length !== word2.length) {\n    return false;\n  }\n\n  return word1 === word2.split('').reverse().join('');\n};\n\nconst isAnagram = (word1, word2) => {\n  if (word1.length !== word2.length) {\n    return false;\n  }\n\n  const word1Sorted = word1.split('').sort().join('');\n  const word2Sorted = word2.split('').sort().join('');\n\n  return word1Sorted === word2Sorted;\n};\n\nconst isPlusogram = (word1, word2) => {\n  if (word1.length === 1 || word2.length - word1.length !== 1) {\n    return false;\n  }\n\n  const word1Sorted = word1.split('').sort().join('');\n  const word2Sorted = word2.split('').sort().join('');\n\n  let hasDifference = false;\n  for (let i = 0; i < word2Sorted.length; i++) {\n    if (word1Sorted.charAt(i - +hasDifference) !== word2Sorted.charAt(i)) {\n      if (hasDifference) {\n        return false;\n      }\n\n      hasDifference = true;\n    }\n  }\n\n  return hasDifference;\n};\n\nconst isMetagram = (word1, word2) => {\n  if (word1.length === 1 || word1.length !== word2.length) {\n    return false;\n  }\n\n  let hasDifference = false;\n  for (let i = 0; i < word1.length; i++) {\n    if (word1.charAt(i) !== word2.charAt(i)) {\n      if (hasDifference) {\n        return false;\n      }\n\n      hasDifference = true;\n    }\n  }\n\n  return hasDifference;\n};\n\nconst isMetanagram = (word1, word2) => {\n  if (word1.length === 1 || word1.length !== word2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < word1.length; i++) {\n    word2 = word2.replace(word1.charAt(i), '');\n  }\n\n  return word2.length === 1;\n};\n\nconst isTlenogram = (word1, word2) => {\n  if (word1.length === 1 || word2.length - word1.length !== 1) {\n    return false;\n  }\n\n  for (let i = 0; i < word1.length; i++) {\n    word2 = word2.replace(word1.charAt(i), '');\n  }\n\n  return word2.length === 2;\n};\n\nconst isLogogrif = (word1, word2) => {\n  if (word1.length === 1 || word2.length - word1.length !== 1) {\n    return false;\n  }\n\n  let hasDifference = false;\n  for (let i = 0; i < word2.length; i++) {\n    if (word1.charAt(i - +hasDifference) !== word2.charAt(i)) {\n      if (hasDifference) {\n        return false;\n      }\n\n      hasDifference = true;\n    }\n  }\n\n  return hasDifference;\n};\n\nconst isLogogrif2 = (word1, word2) => {\n  if (word1.length === 1 || word2.length - word1.length !== 2) {\n    return false;\n  }\n\n  let totalDifferences = 0;\n  for (let i = 0; i < word2.length; i++) {\n    if (word1.charAt(i - totalDifferences) === word2.charAt(i)) {\n      if (totalDifferences === 1) {\n        return false;\n      }\n    } else {\n      if (totalDifferences === 2) {\n        return false;\n      }\n\n      totalDifferences++;\n    }\n  }\n\n  return totalDifferences === 2;\n};\n\nconst isLogogrif3 = (word1, word2) => {\n  if (word1.length === 1 || word2.length - word1.length !== 3) {\n    return false;\n  }\n\n  let totalDifferences = 0;\n  for (let i = 0; i < word2.length; i++) {\n    if (word1.charAt(i - totalDifferences) === word2.charAt(i)) {\n      if (totalDifferences === 1 || totalDifferences === 2) {\n        return false;\n      }\n    } else {\n      if (totalDifferences === 3) {\n        return false;\n      }\n\n      totalDifferences++;\n    }\n  }\n\n  return totalDifferences === 3;\n};\n\nconst isMetagrif = (word1, word2) => {\n  if (word1.length === 1 || word2.length - word1.length !== 1) {\n    return false;\n  }\n\n  let totalDifferences = 0;\n  for (let i = 0; i < word2.length; i++) {\n    if (word1.charAt(i - +!!totalDifferences) !== word2.charAt(i)) {\n      totalDifferences++;\n\n      if (totalDifferences > 2) {\n        break;\n      }\n    }\n  }\n\n  if (totalDifferences === 2) {\n    return true;\n  }\n\n  totalDifferences = 0;\n  for (let i = 0; i < word2.length; i++) {\n    if (word1.charAt(i - +(totalDifferences === 2)) !== word2.charAt(i)) {\n      if (totalDifferences === 2) {\n        return false;\n      }\n\n      totalDifferences++;\n    }\n  }\n\n  return totalDifferences === 2;\n};\n\nconst isBrukva = (word1, word2) => {\n  if (word1.length === 1 || word2.length - word1.length !== 1) {\n    return false;\n  }\n\n  let totalDifferences = 0;\n  for (let i = 0; i < word2.length; i++) {\n    if (word1.charAt(i - +!!totalDifferences) === word2.charAt(i)) {\n      if (totalDifferences === 1) {\n        return false;\n      }\n    } else {\n      if (totalDifferences === 2) {\n        return false;\n      }\n\n      totalDifferences++;\n    }\n  }\n\n  return totalDifferences === 2;\n};\n\nconst isTikva = (word1, word2) => {\n  if (word1.length <= 2 || word2.length - word1.length !== 1) {\n    return false;\n  }\n\n  let totalDifferences = 0;\n  for (let i = 0; i < word2.length; i++) {\n    if (word1.charAt(i - +!!totalDifferences) === word2.charAt(i)) {\n      if (totalDifferences === 1 || totalDifferences === 2) {\n        return false;\n      }\n    } else {\n      if (totalDifferences === 3) {\n        return false;\n      }\n\n      totalDifferences++;\n    }\n  }\n\n  return totalDifferences === 3;\n};\n\nconst createHybrid2 = (word1, word2) => {\n  if (word1.length <= 2 || word2.length <= 2) {\n    return null;\n  }\n\n  const intersection = word1.slice(-2);\n  if (word2.slice(0, 2) === intersection) {\n    return word1.slice(0, -2) + intersection.toUpperCase() + word2.slice(2);\n  }\n\n  return null;\n};\n\nconst createHybrid3 = (word1, word2) => {\n  if (word1.length <= 3 || word2.length <= 3) {\n    return null;\n  }\n\n  const intersection = word1.slice(-3);\n  if (word2.slice(0, 3) === intersection) {\n    return word1.slice(0, -3) + intersection.toUpperCase() + word2.slice(3);\n  }\n\n  return null;\n};\n\nconst createHybrid4 = (word1, word2) => {\n  if (word1.length <= 4 || word2.length <= 4) {\n    return null;\n  }\n\n  const intersection = word1.slice(-4);\n  if (word2.slice(0, 4) === intersection) {\n    return word1.slice(0, -4) + intersection.toUpperCase() + word2.slice(4);\n  }\n\n  return null;\n};\n\nconst createSharada = (word1, word2, dictionarySet) => {\n  const word = word1 + word2;\n  if (dictionarySet.has(word)) {\n    return word;\n  }\n\n  return null;\n};\n\nconst createGolovahvosts = (word1, word2, dictionarySet) => {\n  if (word1.length <= 3 || word2.length <= 3) {\n    return [];\n  }\n\n  const golovahvosts = [];\n  for (let i = word1.length - 1; i >= 3; i--) {\n    const word1Tail = word1.slice(-i);\n\n    for (let j = word2.length - 1; j >= 3; j--) {\n      const word = word1Tail + word2.slice(0, j);\n      if (dictionarySet.has(word)) {\n        golovahvosts.push(\n          word1.slice(0, word1.length - i) + word.toUpperCase() + word2.slice(j - word2.length),\n        );\n      }\n    }\n  }\n\n  return golovahvosts;\n};\n\nconst getFormats = (wordGroups, dictionarySet, selectedFormatsSet) => {\n  const formats = FORMATS_MAP.reduce((result, [format]) => {\n    if (selectedFormatsSet.has(format)) {\n      return {\n        ...result,\n        [format]: [],\n      };\n    }\n\n    return result;\n  }, {});\n\n  wordGroups.forEach((wordGroup1, i) => {\n    wordGroups.forEach((wordGroup2, j) => {\n      if (j === i) {\n        return;\n      }\n\n      wordGroup1.forEach((word1) => {\n        wordGroup2.forEach((word2) => {\n          if (word2 === word1) {\n            return;\n          }\n\n          const result = `${word1} ${word2}`;\n\n          if (j > i) {\n            if (formats.zerkala && !formats.zerkala.includes(result) && isZerkalo(word1, word2)) {\n              formats.zerkala.push(result);\n            }\n\n            if (formats.anagrams && !formats.anagrams.includes(result) && isAnagram(word1, word2)) {\n              formats.anagrams.push(result);\n            }\n\n            if (\n              formats.metagrams &&\n              !formats.metagrams.includes(result) &&\n              isMetagram(word1, word2)\n            ) {\n              formats.metagrams.push(result);\n            }\n\n            if (\n              formats.metanagrams &&\n              !formats.metanagrams.includes(result) &&\n              isMetanagram(word1, word2)\n            ) {\n              formats.metanagrams.push(result);\n            }\n          }\n\n          if (\n            formats.plusograms &&\n            !formats.plusograms.includes(result) &&\n            isPlusogram(word1, word2)\n          ) {\n            formats.plusograms.push(result);\n          }\n\n          if (\n            formats.tlenograms &&\n            !formats.tlenograms.includes(result) &&\n            isTlenogram(word1, word2)\n          ) {\n            formats.tlenograms.push(result);\n          }\n\n          if (\n            formats.logogrifs &&\n            !formats.logogrifs.includes(result) &&\n            isLogogrif(word1, word2)\n          ) {\n            formats.logogrifs.push(result);\n          }\n\n          if (\n            formats.logogrifs2 &&\n            !formats.logogrifs2.includes(result) &&\n            isLogogrif2(word1, word2)\n          ) {\n            formats.logogrifs2.push(result);\n          }\n\n          if (\n            formats.logogrifs3 &&\n            !formats.logogrifs3.includes(result) &&\n            isLogogrif3(word1, word2)\n          ) {\n            formats.logogrifs3.push(result);\n          }\n\n          if (\n            formats.metagrifs &&\n            !formats.metagrifs.includes(result) &&\n            isMetagrif(word1, word2)\n          ) {\n            formats.metagrifs.push(result);\n          }\n\n          if (formats.brukvas && !formats.brukvas.includes(result) && isBrukva(word1, word2)) {\n            formats.brukvas.push(result);\n          }\n\n          if (formats.tikvas && !formats.tikvas.includes(result) && isTikva(word1, word2)) {\n            formats.tikvas.push(result);\n          }\n\n          if (formats.hybrids2) {\n            const hybrid2 = createHybrid2(word1, word2);\n            if (hybrid2 && !formats.hybrids2.includes(hybrid2)) {\n              formats.hybrids2.push(hybrid2);\n            }\n          }\n\n          if (formats.hybrids3) {\n            const hybrid3 = createHybrid3(word1, word2);\n            if (hybrid3 && !formats.hybrids3.includes(hybrid3)) {\n              formats.hybrids3.push(hybrid3);\n            }\n          }\n\n          if (formats.hybrids4) {\n            const hybrid4 = createHybrid4(word1, word2);\n            if (hybrid4 && !formats.hybrids4.includes(hybrid4)) {\n              formats.hybrids4.push(hybrid4);\n            }\n          }\n\n          if (formats.sharadas) {\n            const sharada = createSharada(word1, word2, dictionarySet);\n            if (sharada && !formats.sharadas.includes(sharada)) {\n              formats.sharadas.push(sharada);\n            }\n          }\n\n          if (formats.golovahvosts) {\n            const golovahvosts = createGolovahvosts(word1, word2, dictionarySet);\n            golovahvosts.forEach((golovahvost) => {\n              if (!formats.golovahvosts.includes(golovahvost)) {\n                formats.golovahvosts.push(golovahvost);\n              }\n            });\n          }\n        });\n      });\n    });\n  });\n\n  return formats;\n};\n\nconst App = () => {\n  const [selectedFormatsSet, setSelectedFormatsSet] = useState(new Set());\n\n  const [wordGroups, handleWordGroupsChange] = useField('');\n  const [wordGroupsDebounced] = useDebounce(wordGroups, 500);\n\n  const wordGroupsClean = useMemo(\n    () =>\n      wordGroupsDebounced.split(/\\t+|\\n+/).flatMap((wordGroup) => {\n        wordGroup = wordGroup.trim();\n\n        if (!wordGroup) {\n          return [];\n        }\n\n        const words = wordGroup.replaceAll('/', ' ').replaceAll('\\\\', ' ').split(/\\s+/);\n\n        return [\n          words.flatMap((word) => {\n            if (!/^\\p{L}+$/u.test(word)) {\n              return [];\n            }\n\n            return [word.toLowerCase().replaceAll('ё', 'е')];\n          }),\n        ];\n      }),\n    [wordGroupsDebounced],\n  );\n\n  const formats = useMemo(() => {\n    return getFormats(wordGroupsClean, DATABASE.set, selectedFormatsSet);\n  }, [selectedFormatsSet, wordGroupsClean]);\n\n  const handleSelectedFormatChange = useCallback(\n    (_, { value }) => {\n      if (selectedFormatsSet.has(value)) {\n        setSelectedFormatsSet(\n          new Set([...selectedFormatsSet].filter((format) => format !== value)),\n        );\n      } else {\n        setSelectedFormatsSet(new Set([...selectedFormatsSet, value]));\n      }\n    },\n    [selectedFormatsSet],\n  );\n\n  return (\n    <>\n      <div className={styles.header}>\n        <Container>\n          <Grid padded stackable>\n            <Grid.Row>\n              <Grid.Column width={15}>\n                <Form>\n                  <TextArea\n                    autoFocus\n                    value={wordGroups}\n                    placeholder=\"Группы слов\"\n                    onChange={handleWordGroupsChange}\n                  />\n                </Form>\n              </Grid.Column>\n              <Grid.Column>\n                <Modal size=\"mini\" trigger={<Button size=\"big\" icon=\"setting\" />}>\n                  <Header icon=\"setting\" content=\"Настройки\" />\n                  <Modal.Content>\n                    <Form>\n                      <Form.Group grouped>\n                        <label>Форматы</label>\n                        {FORMATS_MAP.map(([format, formatLabel]) => (\n                          <Form.Checkbox\n                            key={format}\n                            value={format}\n                            label={formatLabel}\n                            checked={selectedFormatsSet.has(format)}\n                            onChange={handleSelectedFormatChange}\n                          />\n                        ))}\n                      </Form.Group>\n                    </Form>\n                  </Modal.Content>\n                </Modal>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n      <div className={styles.content}>\n        <Container>\n          <Grid padded>\n            {FORMATS_MAP.filter(([format]) => formats[format] && formats[format].length > 0).map(\n              ([format, formatLabel]) => (\n                <Grid.Row key={format}>\n                  <Grid.Column>\n                    <Divider horizontal>\n                      <Header as=\"h4\" className={styles.title}>\n                        {formatLabel}\n                      </Header>\n                    </Divider>\n                    <div className={styles.words}>\n                      {formats[format].map((word, i) => (\n                        <Label\n                          horizontal\n                          key={word}\n                          className={classNames(styles.word, i % 2 && styles.odd)}\n                        >\n                          {word}\n                        </Label>\n                      ))}\n                    </div>\n                  </Grid.Column>\n                </Grid.Row>\n              ),\n            )}\n          </Grid>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default withAuth(App);\n","import { useCallback, useState } from 'react';\n\nexport default (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = useCallback((_, { value: nextValue }) => {\n    setValue(nextValue);\n  }, []);\n\n  return [value, handleChange, setValue];\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__3ZZ1n\",\"content\":\"App_content__3La4L\",\"title\":\"App_title__-GfWs\",\"words\":\"App_words__1Oqw2\",\"word\":\"App_word__3aQvw\",\"odd\":\"App_odd__2GTiD\"};"],"sourceRoot":""}